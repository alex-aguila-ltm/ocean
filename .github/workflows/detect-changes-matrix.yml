name: Detect Changes

on:
  workflow_call:
    outputs:
      matrix:
        value: ${{ jobs.detect-changes.outputs.matrix }}
        description: "Matrix of changed integrations / Ocean Core per git commit changes"
      integrations:
        description: "Matrix of changed integrations per git commit changes"
        value: ${{ jobs.detect-changes.outputs.integrations }}
      core:
        value: ${{ jobs.detect-changes.outputs.core }}
        description: "Determine if any core changes per git commit changes"
      infra:
        value: ${{ jobs.detect-changes.outputs.infra }}
        description: "Determine if any changes to docker infra"

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-all-matrix.outputs.matrix }}
      integrations: ${{ steps.set-all-matrix.outputs.integrations }}
      core: ${{ steps.set-all-matrix.outputs.core }}
      infra: ${{ steps.set-all-matrix.outputs.infra }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Get list of changed files
        id: changed-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            core:
              - '!integrations/**'
              - '!scripts/*'
              - '!./*.md'
            integrations:
              - 'integrations/**'
              - '!integrations/**/*.md'
              - '!integrations/_infra/*'
            infra:
              - 'integrations/_infra/*'
          list-files: json
      - name: Process changed files
        id: process-changes
        run: |
          # Process files into dir names at depth 2 and set outputs
          CORE_FILES='${{ steps.changed-files.outputs.core_files }}'
          INTEGRATIONS_FILES='${{ steps.changed-files.outputs.integrations_files }}'
          INFRA_FILES='${{ steps.changed-files.outputs.infra_files }}'

          # Handle core (no depth limit needed, just presence check)
          if [ -z "$CORE_FILES" ] || [ "$CORE_FILES" = '[]' ]; then
            CORE_JSON='[]'
          else
            CORE_JSON="$CORE_FILES"
          fi

          # Handle integrations (depth 2)
          if [ -z "$INTEGRATIONS_FILES" ] || [ "$INTEGRATIONS_FILES" = '[]' ]; then
            INTEGRATIONS_JSON='[]'
          else
            INTEGRATIONS_JSON=$(echo "$INTEGRATIONS_FILES" | jq -r '.[] | split("/")[0:2] | join("/")' | sort -u | jq -s .)
          fi

          # Handle infra (no depth limit needed, just presence check)
          if [ -z "$INFRA_FILES" ] || [ "$INFRA_FILES" = '[]' ]; then
            INFRA_JSON='[]'
          else
            INFRA_JSON="$INFRA_FILES"
          fi

          echo "core_all_changed_files=$CORE_JSON" >> $GITHUB_OUTPUT
          echo "integrations_all_changed_files=$INTEGRATIONS_JSON" >> $GITHUB_OUTPUT
          echo "infra_all_changed_files=$INFRA_JSON" >> $GITHUB_OUTPUT
      - name: Set integrations and all matrix
        id: set-all-matrix
        run: |
          INTEGRATIONS=$(node -e 'integrations=${{ steps.process-changes.outputs.integrations_all_changed_files }};console.log(JSON.stringify(integrations.map(integration => integration.split("/")[1])))')
          HAS_CORE=${{ steps.process-changes.outputs.core_all_changed_files != '[]' }}
          echo "Core changes : ${HAS_CORE}"
          MATRIX=$(node -e "integrations=${INTEGRATIONS}; hasCore=${HAS_CORE}; console.log(JSON.stringify(hasCore ? integrations.concat(['.']) : integrations))")
          HAS_INFRA=${{ steps.process-changes.outputs.infra_all_changed_files != '[]' }}
          echo "Infra changes : ${HAS_INFRA}"
          echo "Integration changes : ${INTEGRATIONS}"
          echo "All changes : ${MATRIX}"
          echo "core=${HAS_CORE}" >> $GITHUB_OUTPUT
          echo "integrations=${INTEGRATIONS}" >> $GITHUB_OUTPUT
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT
          echo "infra=${HAS_INFRA}" >> $GITHUB_OUTPUT