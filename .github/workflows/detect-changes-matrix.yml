name: Detect Changes

on:
  workflow_call:
    outputs:
      matrix:
        value: ${{ jobs.detect-changes.outputs.matrix }}
        description: "Matrix of changed integrations / Ocean Core per git commit changes"
      integrations:
        description: "Matrix of changed integrations per git commit changes"
        value: ${{ jobs.detect-changes.outputs.integrations }}
      core:
        value: ${{ jobs.detect-changes.outputs.core }}
        description: "Determine if any core changes per git commit changes"
      infra:
        value: ${{ jobs.detect-changes.outputs.infra }}
        description: "Determine if any changes to docker infra"

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-all-matrix.outputs.matrix }}
      integrations: ${{ steps.set-all-matrix.outputs.integrations }}
      core: ${{ steps.set-all-matrix.outputs.core }}
      infra: ${{ steps.set-all-matrix.outputs.infra }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get list of changed files
        id: changed-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            core:
              - '!integrations/**'
              - '!scripts/*'
              - '!./*.md'
            integrations:
              - 'integrations/**'
              - '!integrations/_infra/**'
            infra:
              - 'integrations/_infra/*'
          list-files: json
      - name: Process changed files
        id: process-changes
        run: |
          CORE_FILES='${{ steps.changed-files.outputs.core_files }}'
          INTEGRATIONS_FILES='${{ steps.changed-files.outputs.integrations_files }}'
          INFRA_FILES='${{ steps.changed-files.outputs.infra_files }}'

          # Core: Presence check
          if [ -z "$CORE_FILES" ] || [ "$CORE_FILES" = '[]' ]; then
            CORE_COUNT=0
          else
            CORE_ARRAY=($(echo "$CORE_FILES" | jq -r '.[]'))
            CORE_COUNT=${#CORE_ARRAY[@]}          fi
          # Integrations: (depth-2 dirs, count)
          if [ -z "$INTEGRATIONS_FILES" ] || [ "$INTEGRATIONS_FILES" = '[]' ]; then
            INTEGRATIONS_JSON='[]'
            INTEGRATIONS_COUNT=0
          else
            INTEGRATIONS_JSON=$(echo "$INTEGRATIONS_FILES" | jq -r '.[] | split("/")[0:2] | join("/")' | sort -u | jq -sc '.')
            INTEGRATIONS_ARRAY=($(echo "$INTEGRATIONS_FILES" | jq -r '.[]'))
            INTEGRATIONS_COUNT=${#INTEGRATIONS_ARRAY[@]}
          fi

          if [ -z "$INFRA_FILES" ] || [ "$INFRA_FILES" = '[]' ]; then
            INFRA_COUNT=0
          else
            INFRA_ARRAY=($(echo "$INFRA_FILES" | jq -r '.[]'))
            INFRA_COUNT=${#INFRA_ARRAY[@]}          
          fi

          echo "integrations_all_changed_files=$INTEGRATIONS_JSON" >> $GITHUB_OUTPUT
          echo "integrations_count=$INTEGRATIONS_COUNT" >> $GITHUB_OUTPUT
          echo "core_count=$CORE_COUNT" >> $GITHUB_OUTPUT
          echo "infra_count=$INFRA_COUNT" >> $GITHUB_OUTPUT
      - name: Set integrations and all matrix
        id: set-all-matrix
        run: |
          # Extract integration names (e.g., ["gitlab-v2"])
          if [ "${{ steps.process-changes.outputs.integrations_count }}" -eq 0 ]; then
            INTEGRATIONS='[]'
          else
            INTEGRATIONS=$(echo '${{ steps.process-changes.outputs.integrations_all_changed_files }}' | jq -r 'map(split("/")[1])')
          fi

          # Check core and infra presence
          HAS_CORE=${{ steps.process-changes.outputs.core_count > 0 }}
          HAS_INFRA=${{ steps.process-changes.outputs.infra_count > 0 }}

          # Build matrix: integrations + "." if core changes
          if [ "$HAS_CORE" = "true" ]; then
            MATRIX=$(echo "$INTEGRATIONS" | jq -r '. + ["."]')
          else
            MATRIX="$INTEGRATIONS"
          fi

          echo "core=$HAS_CORE" >> $GITHUB_OUTPUT
          echo "integrations=$INTEGRATIONS" >> $GITHUB_OUTPUT
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "infra=$HAS_INFRA" >> $GITHUB_OUTPUT