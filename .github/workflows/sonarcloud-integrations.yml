name: Sonarcloud scan integrations

on:
  push:
    branches:
      - main
    paths:
      - integrations/**
  workflow_dispatch:

jobs:
  pre-run:
    outputs:
      changed_integrations: ${{ steps.create-matrix.outputs.INTEGRATIONS_MATRIX }}
      count_changed_integrations: ${{ steps.process-changes.outputs.count }}
    name: Build Sonarcloud scan run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get all changed integrations
        id: changed-integrations
        uses: dorny/paths-filter@v3
        with:
          filters: |
            integrations:
              - 'integrations/**'
              - '!integrations/_infra/**'
          list-files: json
      - name: Process changed integrations
        id: process-changes
        run: |
          FILES_JSON='${{ steps.changed-integrations.outputs.integrations_files }}'
          if [ -z "$FILES_JSON" ] || [ "$FILES_JSON" = '[]' ]; then
            echo "all_changed_files=[]" >> $GITHUB_OUTPUT
            echo "count=0" >> $GITHUB_OUTPUT
          else
            CHANGED_FILES=$(printf '%s' "$FILES_JSON" | jq -r '.[] | split("/")[0:2] | join("/")' | sort -u | jq -sc '.')
            COUNT=$(printf '%s' "$FILES_JSON" | jq -r 'length')
            echo "all_changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "count=$COUNT" >> $GITHUB_OUTPUT
          fi
      - name: Output changes integrations
        id: create-matrix
        run: |
          echo "INTEGRATIONS_MATRIX={ \"integrations\": ${{ steps.process-changes.outputs.all_changed_files }} }" >> $GITHUB_OUTPUT

  sonarcloud-scan:
    name: Sonarcloud scan changed integrations
    needs: pre-run
    if: ${{ needs.pre-run.outputs.count_changed_integrations > 0 }}
    strategy:
      max-parallel: 5
      matrix: ${{ fromJson(needs.pre-run.outputs.changed_integrations) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create integration variable
        run: |
          unsplit_integ="${{ matrix.integrations }}"
          integration=${unsplit_integ##*/}
          integration=$(echo "$integration" | tr '-' '_')
          integration=$(echo "$integration" | awk '{print toupper($0)}')
          echo "INTEG_NAME=$integration" >> $GITHUB_ENV
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets[env.INTEG_NAME] }}
        with:
          projectBaseDir: ${{ matrix.integrations }}